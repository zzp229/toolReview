<Window x:Class="导航1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:导航1"
        xmlns:views="clr-namespace:导航1.Views"
        d:DataContext="{d:DesignInstance Type=local:MainViewModel}"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="MainWindow" Height="450" Width="800">
    <!--<Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>-->

    
    <!--方案一：通过从容器中绑定DataContext-->
    <!--<TabControl TabStripPlacement="Left">
        <TabItem Header="Page 1">
            <views:Page1 x:Name="Page1"/>
        </TabItem>
        
        <TabItem Header="Page 2">
            --><!--这样就可以绑定上DataContext了，好神奇--><!--
            <views:Page2 x:Name="Page2"/>
        </TabItem>

        <TabItem Header="Page 3">
            <views:Page3 x:Name="Page3"/>
        </TabItem>
    </TabControl>-->

    <TabControl TabStripPlacement="Left"
                ItemsSource="{Binding ViewModels}">
        <!--设置Item绑定属性Header-->
        <TabControl.ItemTemplate>
            <DataTemplate>
                <TextBlock Text="{Binding Header}"/>
            </DataTemplate>
        </TabControl.ItemTemplate>
        <!--给每个用户控件子项添加ViewModel-->
        <TabControl.Resources>
            <DataTemplate DataType="{x:Type local:Page1ViewModel}">
                <views:Page1/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:Page2ViewModel}">
                <views:Page2/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:Page3ViewModel}">
                <views:Page3/>
            </DataTemplate>
        </TabControl.Resources>
    </TabControl>
</Window>
